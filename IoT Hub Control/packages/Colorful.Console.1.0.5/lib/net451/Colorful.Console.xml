<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Colorful.Console</name>
    </assembly>
    <members>
        <member name="T:Colorful.ColorAlternator">
            <summary>
            Exposes methods and properties used for alternating over a set of colors.
            </summary>
        </member>
        <member name="P:Colorful.ColorAlternator.Colors">
            <summary>
            The set of colors over which to alternate.
            </summary>
        </member>
        <member name="M:Colorful.ColorAlternator.#ctor">
            <summary>
            Exposes methods and properties used for alternating over a set of colors.
            </summary>
        </member>
        <member name="M:Colorful.ColorAlternator.#ctor(System.Drawing.Color[])">
            <summary>
            Exposes methods and properties used for alternating over a set of colors.
            </summary>
        </member>
        <member name="M:Colorful.ColorAlternator.GetNextColor(System.String)">
            <summary>
            Alternates colors based on the state of the ColorAlternator instance.
            </summary>
            <param name="input">The string to be styled.</param>
            <returns>The current color of the ColorAlternator.</returns>
        </member>
        <member name="T:Colorful.Console">
            <summary>
            Wraps around the System.Console class, adding enhanced styling functionality.
            </summary>
            <summary>
            Wraps around the System.Console class, adding enhanced styling functionality.
            </summary>
        </member>
        <member name="T:Colorful.ColorManager">
            <summary>
            Manages the number of different colors that the Windows console is able to display in a given session.
            </summary>
        </member>
        <member name="M:Colorful.ColorManager.#ctor(Colorful.ColorStore,Colorful.ColorMapper,System.Int32,System.Int32)">
            <summary>
            Manages the number of different colors that the Windows console is able to display in a given session.
            </summary>
            <param name="colorStore">The ColorStore instance in which the ColorManager will store colors.</param>
            <param name="colorMapper">The ColorMapper instance the ColorManager will use to relate different color 
            types to one another.</param>
            <param name="maxColorChanges">The maximum number of color changes allowed by the ColorManager.  It's 
            necessary to keep track of this, because the Windows console can only display 16 different colors in
            a given session.</param>
            <param name="initialColorChangeCountValue">The number of color changes which have already occurred.</param>
        </member>
        <member name="M:Colorful.ColorManager.GetColor(System.ConsoleColor)">
            <summary>
            Gets the System.Drawing.Color mapped to the ConsoleColor provided as an argument.
            </summary>
            <param name="color">The ConsoleColor alias under which the desired System.Drawing.Color is stored.</param>
            <returns>The corresponding System.Drawing.Color.</returns>
        </member>
        <member name="M:Colorful.ColorManager.GetConsoleColor(System.Drawing.Color)">
            <summary>
            Gets the ConsoleColor mapped to the System.Drawing.Color provided as an argument.
            </summary>
            <param name="color">The System.Drawing.Color whose ConsoleColor alias should be retrieved.</param>
            <returns>The corresponding ConsoleColor.</returns>
        </member>
        <member name="T:Colorful.ColorMapper">
            <summary>
            Exposes methods used for mapping System.Drawing.Colors to System.ConsoleColors.
            Based on code that was originally written by Alex Shvedov, and that was then modified by MercuryP.
            </summary>
        </member>
        <member name="M:Colorful.ColorMapper.MapColor(System.ConsoleColor,System.Drawing.Color)">
            <summary>
            Maps a System.Drawing.Color to a System.ConsoleColor.
            </summary>
            <param name="oldColor">The color to be replaced.</param>
            <param name="newColor">The color to be mapped.</param>
        </member>
        <member name="T:Colorful.ColorMappingException">
            <summary>
            Encapsulates information relating to exceptions thrown during color mapping.
            </summary>
        </member>
        <member name="M:Colorful.ColorMappingException.#ctor(System.Int32)">
            <summary>
            Encapsulates information relating to exceptions thrown during color mapping.
            </summary>
            <param name="errorCode">The underlying Win32 error code associated with the exception that
            has been trapped.</param>
        </member>
        <member name="T:Colorful.ColorStore">
            <summary>
            Stores and manages the assignment of System.Drawing.Color objects to ConsoleColor objects.
            </summary>
        </member>
        <member name="P:Colorful.ColorStore.Colors">
            <summary>
            A map from System.Drawing.Color to ConsoleColor.
            </summary>
        </member>
        <member name="P:Colorful.ColorStore.ConsoleColors">
            <summary>
            A map from ConsoleColor to System.Drawing.Color.
            </summary>
        </member>
        <member name="M:Colorful.ColorStore.#ctor(System.Collections.Concurrent.ConcurrentDictionary{System.Drawing.Color,System.ConsoleColor},System.Collections.Concurrent.ConcurrentDictionary{System.ConsoleColor,System.Drawing.Color})">
            <summary>
            Manages the assignment of System.Drawing.Color objects to ConsoleColor objects.
            </summary>
            <param name="colorMap">The Dictionary the ColorStore should use to key System.Drawing.Color objects
            to ConsoleColor objects.</param>
            <param name="consoleColorMap">The Dictionary the ColorStore should use to key ConsoleColor
            objects to System.Drawing.Color objects.</param>
        </member>
        <member name="M:Colorful.ColorStore.Update(System.Drawing.Color,System.ConsoleColor)">
            <summary>
            Adds a new System.Drawing.Color to the ColorStore.
            </summary>
            <param name="newColor">The System.Drawing.Color to be added to the ColorStore.</param>
            <param name="oldColor">The ConsoleColor to be replaced by the new System.Drawing.Color.</param>
        </member>
        <member name="M:Colorful.ColorStore.RequiresUpdate(System.Drawing.Color)">
            <summary>
            Notifies the caller as to whether or not the specified System.Drawing.Color needs to be added 
            to the ColorStore.
            </summary>
            <param name="color">The System.Drawing.Color to be checked for membership.</param>
            <returns>Returns 'true' if the ColorStore already contains the specified System.Drawing.Color.</returns>
        </member>
        <member name="M:Colorful.ExtensionMethods.AsString``1(``0)">
            <summary>
            Convenience wrapper around the String.Join method.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Colorful.ExtensionMethods.Normalize``1(``0)">
            <summary>
            Takes a single object (which could be a 1-dimensional array) and returns it (or, potentially,
            all of its elements) as an element of an array of the corresponding type.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="input">The object which will be transformed into an array.</param>
            <returns>An array of a certain type, as dynamic.</returns>
        </member>
        <member name="T:Colorful.Formatter">
            <summary>
            Exposes properties representing an object and its color.  This is a convenience wrapper around
            the StyleClass type, so you don't have to provide the type argument each time.
            </summary>
        </member>
        <member name="P:Colorful.Formatter.Target">
            <summary>
            The object to be styled.
            </summary>
        </member>
        <member name="P:Colorful.Formatter.Color">
            <summary>
            The color to be applied to the target.
            </summary>
        </member>
        <member name="M:Colorful.Formatter.#ctor(System.Object,System.Drawing.Color)">
            <summary>
            Exposes properties representing an object and its color.  This is a convenience wrapper around
            the StyleClass type, so you don't have to provide the type argument each time.
            </summary>
            <param name="target">The object to be styled.</param>
            <param name="color">The color to be applied to the target.</param>
        </member>
        <member name="T:Colorful.FrequencyBasedColorAlternator">
            <summary>
            Exposes methods and properties used for alternating over a set of colors according to
            frequency of use.
            </summary>
        </member>
        <member name="M:Colorful.FrequencyBasedColorAlternator.#ctor(System.Int32,System.Drawing.Color[])">
            <summary>
            Exposes methods and properties used for alternating over a set of colors according to
            frequency of use.
            </summary>
            <param name="alternationFrequency">The number of times GetNextColor must be called in order for
            the color to alternate.</param>
            <param name="colors">The set of colors over which to alternate.</param>
        </member>
        <member name="M:Colorful.FrequencyBasedColorAlternator.GetNextColor(System.String)">
            <summary>
            Alternates colors based on the number of times GetNextColor has been called.
            </summary>
            <param name="input">The string to be styled.</param>
            <returns>The current color of the ColorAlternator.</returns>
        </member>
        <member name="T:Colorful.IPrototypable`1">
            <summary>
            Exposes methods used for creating (potentially inexact) copies of objects.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Colorful.IPrototypable`1.Prototype">
            <summary>
            Returns a potentially inexact copy of the target object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Colorful.MatchLocation">
            <summary>
            Exposes properties describing the indices of the beginning and end of a pattern match.
            </summary>
        </member>
        <member name="P:Colorful.MatchLocation.Beginning">
            <summary>
            The index of the beginning of the pattern match.
            </summary>
        </member>
        <member name="P:Colorful.MatchLocation.End">
            <summary>
            The index of the end of the pattern match.
            </summary>
        </member>
        <member name="M:Colorful.MatchLocation.#ctor(System.Int32,System.Int32)">
            <summary>
            Exposes properties describing the indices of the beginning and end of a pattern match.
            </summary>
            <param name="beginning">The index of the beginning of the pattern match.</param>
            <param name="end">The index of the end of the pattern match.</param>
        </member>
        <member name="T:Colorful.Pattern`1">
            <summary>
            Exposes methods and properties representing a pattern.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Colorful.Pattern`1.Value">
            <summary>
            The value, or definition, of the pattern.
            </summary>
        </member>
        <member name="M:Colorful.Pattern`1.#ctor(`0)">
            <summary>
            Exposes methods and properties representing a pattern.
            </summary>
            <param name="pattern">The value, or definition, of the pattern.</param>
        </member>
        <member name="M:Colorful.Pattern`1.GetMatches(`0)">
            <summary>
            Finds matches between the Pattern instance and a given object.
            </summary>
            <param name="input">The object to which the Pattern instance should be compared.</param>
            <returns>Returns a collection of the locations in the object under comparison that
            match the Pattern instance.</returns>
        </member>
        <member name="T:Colorful.PatternBasedColorAlternator`1">
            <summary>
            Exposes methods and properties used for alternating over a set of colors according to
            the occurrences of patterns.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Colorful.PatternBasedColorAlternator`1.#ctor(Colorful.PatternCollection{`0},System.Drawing.Color[])">
            <summary>
            Exposes methods and properties used for alternating over a set of colors according to
            the occurrences of patterns.
            </summary>
            <param name="patternMatcher">The PatternMatcher instance which will dictate what will
            need to happen in order for the color to alternate.</param>
            <param name="colors">The set of colors over which to alternate.</param>
        </member>
        <member name="M:Colorful.PatternBasedColorAlternator`1.GetNextColor(System.String)">
            <summary>
            Alternates colors based on patterns matched in the input string.
            </summary>
            <param name="input">The string to be styled.</param>
            <returns>The current color of the ColorAlternator.</returns>
        </member>
        <member name="T:Colorful.PatternCollection`1">
            <summary>
            Represents a collection of Pattern objects.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Colorful.PatternCollection`1.#ctor">
            <summary>
            Represents a collection of Pattern objects.
            </summary>
        </member>
        <member name="M:Colorful.PatternCollection`1.MatchFound(System.String)">
            <summary>
            Attempts to match any of the PatternCollection's member Patterns against a string input.
            </summary>
            <param name="input">The input against which Patterns will potentially be matched.</param>
            <returns>Returns 'true' if any of the PatternCollection's member Patterns matches against
            the input string.</returns>
        </member>
        <member name="T:Colorful.StyleClass`1">
            <summary>
            Exposes methods and properties that represent a style classification.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Colorful.StyleClass`1.Target">
            <summary>
            The object to be styled.
            </summary>
        </member>
        <member name="P:Colorful.StyleClass`1.Color">
            <summary>
            The color to be applied to the target.
            </summary>
        </member>
        <member name="M:Colorful.StyleClass`1.#ctor">
            <summary>
            Exposes methods and properties that represent a style classification.
            </summary>
        </member>
        <member name="M:Colorful.StyleClass`1.#ctor(`0,System.Drawing.Color)">
            <summary>
            Exposes methods and properties that represent a style classification.
            </summary>
            <param name="target">The object to be styled.</param>
            <param name="color">The color to be applied to the target.</param>
        </member>
        <member name="T:Colorful.StyledString">
            <summary>
            A string encoded with style!
            </summary>
        </member>
        <member name="P:Colorful.StyledString.AbstractValue">
            <summary>
            The one-dimensional representation of the StyledString.  Maps 1:1 with System.String.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Colorful.StyledString.ConcreteValue" -->
        <member name="P:Colorful.StyledString.ColorGeometry">
            <summary>
            A matrix of colors that corresponds to each concrete character in the StyledString.
            Dimensions are [row, column].
            </summary>
        </member>
        <member name="P:Colorful.StyledString.CharacterGeometry">
            <summary>
            A matrix of concrete characters that corresponds to each concrete character in the StyledString.
            In other words, this is a two-dimensional representation of the StyledString.ConcreteValue property.
            </summary>
        </member>
        <member name="P:Colorful.StyledString.CharacterIndexGeometry">
            <summary>
            A matrix of abstract character indices that corresponds to each concrete character in the StyledString.
            Dimensions are [row, column].
            </summary>
        </member>
        <member name="M:Colorful.StyledString.ToString">
            <summary>
            Returns the StyledString's concrete representation.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Colorful.Styler">
            <summary>
            A StyleClass instance that exposes a delegate instance which can be used for more 
            customized styling.
            </summary>
        </member>
        <member name="T:Colorful.Styler.MatchFound">
            <summary>
            Defines a string transformation.
            </summary>
            <param name="unstyledInput">The entire input string being matched against, before
            styling has taken place.</param>
            <param name="matchLocation">The location of the target in the input string.</param>
            <param name="match">The "matching" portion of the input string.</param>
            <returns>A transformed version of the 'match' parameter.</returns>
        </member>
        <member name="T:Colorful.Styler.MatchFoundLite">
            <summary>
            Defines a simpler string transformation.
            </summary>
            <param name="match">The "matching" portion of the input string.</param>
            <returns>A transformed version of the 'match' parameter.</returns>
        </member>
        <member name="P:Colorful.Styler.MatchFoundHandler">
            <summary>
            A delegate instance which can be used for custom styling.
            </summary>
        </member>
        <member name="M:Colorful.Styler.#ctor(System.String,System.Drawing.Color,Colorful.Styler.MatchFound)">
            <summary>
            A StyleClass instance that exposes a delegate instance which can be used for more 
            customized styling.
            </summary>
            <param name="target">The string to be styled.</param>
            <param name="color">The color to be applied to the target.</param>
            <param name="matchHandler">A delegate instance which describes a transformation that
            can be applied to the target.</param>
        </member>
        <member name="T:Colorful.StyleSheet">
            <summary>
            Exposes a collection of style classifications which can be used to style text.
            </summary>
        </member>
        <member name="P:Colorful.StyleSheet.Styles">
            <summary>
            The StyleSheet's collection of style classifications.
            </summary>
        </member>
        <member name="F:Colorful.StyleSheet.UnstyledColor">
            <summary>
            The color to be associated with unstyled text.
            </summary>
        </member>
        <member name="M:Colorful.StyleSheet.#ctor(System.Drawing.Color)">
            <summary>
            Exposes a collection of style classifications which can be used to style text.
            </summary>
            <param name="defaultColor">The color to be associated with unstyled text.</param>
        </member>
        <member name="M:Colorful.StyleSheet.AddStyle(System.String,System.Drawing.Color,Colorful.Styler.MatchFound)">
            <summary>
            Adds a style classification to the StyleSheet.
            </summary>
            <param name="target">The string to be styled.</param>
            <param name="color">The color to be applied to the target.</param>
            <param name="matchHandler">A delegate instance which describes a transformation that
            can be applied to the target.</param>
        </member>
        <member name="M:Colorful.StyleSheet.AddStyle(System.String,System.Drawing.Color,Colorful.Styler.MatchFoundLite)">
            <summary>
            Adds a style classification to the StyleSheet.
            </summary>
            <param name="target">The string to be styled.</param>
            <param name="color">The color to be applied to the target.</param>
            <param name="matchHandler">A delegate instance which describes a simpler transformation that
            can be applied to the target.</param>
        </member>
        <member name="M:Colorful.StyleSheet.AddStyle(System.String,System.Drawing.Color)">
            <summary>
            Adds a style classification to the StyleSheet.
            </summary>
            <param name="target">The string to be styled.</param>
            <param name="color">The color to be applied to the target.</param>
        </member>
        <member name="T:Colorful.TextAnnotator">
            <summary>
            Exposes methods and properties used in batch styling of text.
            </summary>
        </member>
        <member name="M:Colorful.TextAnnotator.#ctor(Colorful.StyleSheet)">
            <summary>
            Exposes methods and properties used in batch styling of text.
            </summary>
            <param name="styleSheet">The StyleSheet instance that defines the way in which text should be styled.</param>
        </member>
        <member name="M:Colorful.TextAnnotator.GetAnnotationMap(System.String)">
            <summary>
            Partitions the input text into styled and unstyled pieces.
            </summary>
            <param name="input">The text to be styled.</param>
            <returns>Returns a map relating pieces of text to their corresponding styles.</returns>
        </member>
        <member name="T:Colorful.TextFormatter">
            <summary>
            Exposes methods and properties used in batch styling of text.  In contrast to the TextAnnotator
            class, this class is meant to be used in the styling of *formatted* strings, i.e. strings that
            follow the "{0}, {1}...{n}" pattern.
            </summary>
        </member>
        <member name="M:Colorful.TextFormatter.#ctor(System.Drawing.Color)">
            <summary>
            Exposes methods and properties used in batch styling of text.  In contrast to the TextAnnotator
            class, this class is meant to be used in the styling of *formatted* strings, i.e. strings that
            follow the "{0}, {1}...{n}" pattern.
            </summary>
            <param name="defaultColor">The color to be associated with unstyled text.</param>
        </member>
        <member name="M:Colorful.TextFormatter.#ctor(System.Drawing.Color,System.String)">
            <summary>
            Exposes methods and properties used in batch styling of text.  In contrast to the TextAnnotator
            class, this class is meant to be used in the styling of *formatted* strings, i.e. strings that
            follow the "{0}, {1}...{n}" pattern.
            </summary>
            <param name="defaultColor">The color to be associated with unstyled text.</param>
            <param name="formatToken">A regular expression representing the format token.  By default,
            the TextFormatter will use a regular expression that matches the "{0}, {1}...{n}" pattern.</param>
        </member>
        <member name="M:Colorful.TextFormatter.GetFormatMap(System.String,System.Object[],System.Drawing.Color[])">
            <summary>
            Partitions the input text into styled and unstyled pieces.
            </summary>
            <param name="input">The text to be styled.</param>
            <param name="args">A collection of objects that will replace the format tokens in the
            input string.</param>
            <returns>Returns a map relating pieces of text to their corresponding styles.</returns>
        </member>
        <member name="T:Colorful.TextPattern">
            <summary>
            Exposes methods and properties representing a text pattern.
            </summary>
        </member>
        <member name="M:Colorful.TextPattern.#ctor(System.String)">
            <summary>
            Exposes methods and properties representing a text pattern.
            </summary>
            <param name="pattern">A string representation of the pattern.  This can be either a 
            regular string *or* a regular expression (as string).</param>
        </member>
        <member name="M:Colorful.TextPattern.GetMatches(System.String)">
            <summary>
            Finds matches between the TextPattern instance and a given object.
            </summary>
            <param name="input">The string to which the TextPattern instance should be compared.</param>
            <returns>Returns a collection of the locations in the string under comparison that
            match the TextPattern instance.</returns>
        </member>
        <member name="T:Colorful.TextPatternCollection">
            <summary>
            Represents a collection of TextPattern objects.
            </summary>
        </member>
        <member name="M:Colorful.TextPatternCollection.#ctor(System.String[])">
            <summary>
            Represents a collection of TextPattern objects.
            </summary>
            <param name="firstPattern">The first pattern to be added to the collection.</param>
            <param name="morePatterns">Other patterns to be added to the collection.</param>
        </member>
        <member name="M:Colorful.TextPatternCollection.MatchFound(System.String)">
            <summary>
            Attempts to match any of the TextPatternCollection's member TextPatterns against a string input.
            </summary>
            <param name="input">The input against which Patterns will potentially be matched.</param>
            <returns>Returns 'true' if any of the TextPatternCollection's member TextPatterns matches against
            the input string.</returns>
        </member>
    </members>
</doc>
